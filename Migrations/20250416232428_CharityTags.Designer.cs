// <auto-generated />
using System;
using GiveHub.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GiveHub.Migrations
{
    [DbContext(typeof(GiveHubDbContext))]
    [Migration("20250416232428_CharityTags")]
    partial class CharityTags
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GiveHub.Models.Charity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ContactEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ContactPhone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Donations")
                        .HasColumnType("numeric");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Owners")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Stars")
                        .HasColumnType("integer");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserUid")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Zip")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Charities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Springfield",
                            ContactEmail = "alice@hopeforall.org",
                            ContactName = "Alice Johnson",
                            ContactPhone = "555-123-4567",
                            Description = "Helping underserved communities with education and shelter.",
                            Donations = 3500m,
                            Image = "https://example.com/images/hope.jpg",
                            Name = "Hope for All",
                            Owners = "Alice Johnson",
                            Stars = 4,
                            State = "IL",
                            Street = "123 Unity Lane",
                            UserUid = "uid-hope1",
                            Website = "https://hopeforall.org",
                            Zip = "62704"
                        },
                        new
                        {
                            Id = 2,
                            City = "Boulder",
                            ContactEmail = "brian@greenearth.org",
                            ContactName = "Brian Meadows",
                            ContactPhone = "555-765-4321",
                            Description = "Promoting environmental sustainability and awareness.",
                            Donations = 8900m,
                            Image = "https://example.com/images/green.jpg",
                            Name = "Green Earth Fund",
                            Owners = "Brian Meadows",
                            Stars = 5,
                            State = "CO",
                            Street = "45 Nature Ave",
                            UserUid = "uid-earth2",
                            Website = "https://greenearth.org",
                            Zip = "80301"
                        },
                        new
                        {
                            Id = 3,
                            City = "Portland",
                            ContactEmail = "catherine@foodforward.org",
                            ContactName = "Catherine Lee",
                            ContactPhone = "555-789-0000",
                            Description = "Connecting food donors with hunger relief programs.",
                            Donations = 12000m,
                            Image = "https://example.com/images/foodforward.jpg",
                            Name = "Food Forward",
                            Owners = "Catherine Lee",
                            Stars = 5,
                            State = "OR",
                            Street = "88 Kindness Blvd",
                            UserUid = "uid-food3",
                            Website = "https://foodforward.org",
                            Zip = "97201"
                        },
                        new
                        {
                            Id = 4,
                            City = "Austin",
                            ContactEmail = "david@booksforkids.org",
                            ContactName = "David Chen",
                            ContactPhone = "555-321-7890",
                            Description = "Providing books and literacy programs for children.",
                            Donations = 5000m,
                            Image = "https://example.com/images/books.jpg",
                            Name = "Books for Kids",
                            Owners = "David Chen",
                            Stars = 4,
                            State = "TX",
                            Street = "212 Literacy Ln",
                            UserUid = "uid-books4",
                            Website = "https://booksforkids.org",
                            Zip = "73301"
                        },
                        new
                        {
                            Id = 5,
                            City = "Phoenix",
                            ContactEmail = "erika@safehaven.org",
                            ContactName = "Erika Martinez",
                            ContactPhone = "555-456-9999",
                            Description = "Supporting homeless individuals with food and housing.",
                            Donations = 7400m,
                            Image = "https://example.com/images/shelter.jpg",
                            Name = "Safe Haven Shelter",
                            Owners = "Erika Martinez",
                            Stars = 5,
                            State = "AZ",
                            Street = "678 Hope St",
                            UserUid = "uid-safe5",
                            Website = "https://safehaven.org",
                            Zip = "85001"
                        });
                });

            modelBuilder.Entity("GiveHub.Models.CharityTag", b =>
                {
                    b.Property<int>("CharityId")
                        .HasColumnType("integer");

                    b.Property<int>("TagId")
                        .HasColumnType("integer");

                    b.HasKey("CharityId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("CharityTag");
                });

            modelBuilder.Entity("GiveHub.Models.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CharityId")
                        .HasColumnType("integer");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ContactEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ContactPhone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserUid")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Zip")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CharityId");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CharityId = 1,
                            City = "Springfield",
                            ContactEmail = "alice@hopeforall.org",
                            ContactName = "Alice Johnson",
                            ContactPhone = "555-123-4567",
                            Date = new DateTime(2025, 5, 15, 13, 30, 0, 0, DateTimeKind.Utc),
                            Description = "Providing school supplies to children in need.",
                            Image = "https://example.com/images/schooldrive.jpg",
                            Name = "Back-to-School Drive",
                            State = "IL",
                            Street = "123 Unity Lane",
                            UserUid = "uid-hope1",
                            Zip = "62704"
                        },
                        new
                        {
                            Id = 2,
                            CharityId = 2,
                            City = "Boulder",
                            ContactEmail = "brian@greenearth.org",
                            ContactName = "Brian Meadows",
                            ContactPhone = "555-765-4321",
                            Date = new DateTime(2025, 5, 15, 13, 30, 0, 0, DateTimeKind.Utc),
                            Description = "Community tree planting initiative.",
                            Image = "https://example.com/images/trees.jpg",
                            Name = "Tree Planting Day",
                            State = "CO",
                            Street = "45 Nature Ave",
                            UserUid = "uid-earth2",
                            Zip = "80301"
                        },
                        new
                        {
                            Id = 3,
                            CharityId = 3,
                            City = "Portland",
                            ContactEmail = "catherine@foodforward.org",
                            ContactName = "Catherine Lee",
                            ContactPhone = "555-789-0000",
                            Date = new DateTime(2025, 5, 15, 13, 30, 0, 0, DateTimeKind.Utc),
                            Description = "Volunteers needed for distributing donated food.",
                            Image = "https://example.com/images/food.jpg",
                            Name = "Food Distribution Weekend",
                            State = "OR",
                            Street = "88 Kindness Blvd",
                            UserUid = "uid-food3",
                            Zip = "97201"
                        },
                        new
                        {
                            Id = 4,
                            CharityId = 4,
                            City = "Austin",
                            ContactEmail = "david@booksforkids.org",
                            ContactName = "David Chen",
                            ContactPhone = "555-321-7890",
                            Date = new DateTime(2025, 5, 15, 13, 30, 0, 0, DateTimeKind.Utc),
                            Description = "Raising funds by reading books for donations.",
                            Image = "https://example.com/images/readathon.jpg",
                            Name = "Read-a-Thon Fundraiser",
                            State = "TX",
                            Street = "212 Literacy Ln",
                            UserUid = "uid-books4",
                            Zip = "73301"
                        },
                        new
                        {
                            Id = 5,
                            CharityId = 5,
                            City = "Phoenix",
                            ContactEmail = "erika@safehaven.org",
                            ContactName = "Erika Martinez",
                            ContactPhone = "555-456-9999",
                            Date = new DateTime(2025, 5, 15, 13, 30, 0, 0, DateTimeKind.Utc),
                            Description = "Connecting homeless individuals with resources.",
                            Image = "https://example.com/images/outreach.jpg",
                            Name = "Homeless Outreach Day",
                            State = "AZ",
                            Street = "678 Hope St",
                            UserUid = "uid-safe5",
                            Zip = "85001"
                        });
                });

            modelBuilder.Entity("GiveHub.Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("GiveHub.Models.CharityTag", b =>
                {
                    b.HasOne("GiveHub.Models.Charity", "Charity")
                        .WithMany("CharityTags")
                        .HasForeignKey("CharityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GiveHub.Models.Tag", "Tag")
                        .WithMany("CharityTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Charity");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("GiveHub.Models.Event", b =>
                {
                    b.HasOne("GiveHub.Models.Charity", "Charity")
                        .WithMany("Events")
                        .HasForeignKey("CharityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Charity");
                });

            modelBuilder.Entity("GiveHub.Models.Charity", b =>
                {
                    b.Navigation("CharityTags");

                    b.Navigation("Events");
                });

            modelBuilder.Entity("GiveHub.Models.Tag", b =>
                {
                    b.Navigation("CharityTags");
                });
#pragma warning restore 612, 618
        }
    }
}
